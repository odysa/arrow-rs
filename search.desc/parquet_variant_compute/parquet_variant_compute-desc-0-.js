searchState.loadedDescShard("parquet_variant_compute", 0, "An array of Parquet <code>Variant</code> values\nA builder for <code>VariantArray</code>\nParse a batch of JSON strings into a batch of Variants …\nTransform a batch of Variant represented as STRUCT&lt;…\nThe fields of the final <code>StructArray</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nModule for transforming a batch of JSON strings into a …\nStructArray of up to three fields:\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nbuffer for all the metadata\n(offset, len) pairs for locations of metadata in the buffer\nReference to the metadata column of inner\nNulls\nModule for transforming a batch of Variants represented as …\nbuffer for values\n(offset, len) pairs for locations of values in the buffer\nReference to the value column of inner\n<code>VariantArray</code> implementation\n<code>VariantArrayBuilder</code> implementation\nParse a batch of JSON strings into a batch of Variants …\nTransform a batch of Variant represented as STRUCT&lt;…\nAn array of Parquet <code>Variant</code> values\nReturns a reference to the underlying <code>StructArray</code>.\nStructArray of up to three fields:\nReturns the inner <code>StructArray</code>, consuming self\nReturn a reference to the metadata field of the <code>StructArray</code>\nReference to the metadata column of inner\nCreates a new <code>VariantArray</code> from a <code>StructArray</code>.\nReturn the <code>Variant</code> instance stored at the given row\nReturn a reference to the value field of the <code>StructArray</code>\nReference to the value column of inner\nA builder for <code>VariantArray</code>\nAppends a null row to the builder.\nAppend the <code>Variant</code> to the builder as the next row\nAppend a metadata and values buffer to the builder\nBuild the final builder\nThe fields of the final <code>StructArray</code>\nbuffer for all the metadata\n(offset, len) pairs for locations of metadata in the buffer\nNulls\nbuffer for values\n(offset, len) pairs for locations of values in the buffer\nControls the action of the variant_get kernel.\nif <code>as_type</code> is None, the returned array will itself be a …\nControls the casting behavior (e.g. error vs substituting …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConstruct options to get the specified path as a variant.\nWhat path to extract\nReturns an array with the specified path extracted from …")